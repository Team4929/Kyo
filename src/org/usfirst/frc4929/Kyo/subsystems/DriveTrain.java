// RobotBuilder Version: 1.5
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc4929.Kyo.subsystems;

import org.usfirst.frc4929.Kyo.RobotMap;
import org.usfirst.frc4929.Kyo.commands.*;

import edu.wpi.first.wpilibj.*;
import edu.wpi.first.wpilibj.command.Subsystem;


/**
 *
 */
public class DriveTrain extends Subsystem {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    SpeedController leftR = RobotMap.driveTrainLeftR;
    SpeedController leftF = RobotMap.driveTrainLeftF;
    SpeedController rightR = RobotMap.driveTrainRightR;
    SpeedController rightF = RobotMap.driveTrainRightF;
    RobotDrive robotDrive41 = RobotMap.driveTrainRobotDrive41;
    DigitalInput proximitySensor = RobotMap.driveTrainProximitySensor;
    Gyro gyro1 = RobotMap.drivetrainGyro1;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    
    // Put methods for controlling this subsystem
    // here. Call these from Commands.

    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
        setDefaultCommand(new DriveWithJoystick());

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
	
        // Set the default command for a subsystem here.
        //setDefaultCommand(new MySpecialCommand());
        

    }
    
    public void mecanumDriveAuto() {
    	
    	// Use the joystick X axis for lateral movement, Y axis for forward movement, and Z axis for rotation.
    	// This sample does not use field-oriented drive, so the gyro input is set to zero.
    	robotDrive41.mecanumDrive_Cartesian(0, -0.2, 0, 0);
    }
    
    public void mecanumDrive(Joystick stick, Joystick stick2) {
    	
    	// Getting throttle from joystick and correcting -1 to 1 range into 0 to -1 range.
    	double throttleSetting = (stick.getThrottle() + 1) * -0.5;   			
    	
    	// Use the joystick X axis for lateral movement, Y axis for forward movement, and Z axis for rotation.
    	// This sample does not use field-oriented drive, so the gyro input is set to zero.
    	robotDrive41.mecanumDrive_Cartesian(stick2.getX() * throttleSetting, stick.getY() * throttleSetting, stick.getZ() * throttleSetting, gyro1.getAngle());
        
        Timer.delay(0.005);	// wait 5ms to avoid hogging CPU cycles
    }

}

